#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// parse lines like '- [ ] task' or '- [x] done' into task objects
function parseTasksFromMarkdown(text) {
  const lines = text.split('\n');
  const tasks = [];
  lines.forEach((line, idx) => {
    const match = line.match(/^\s*[-*]\s*\[(x| |X)?\]\s+(.*)$/);
    if (match) {
      const isDone = match[1] && match[1].toLowerCase() === 'x';
      const taskText = match[2].trim();
      tasks.push({ id: `${idx}-${taskText}`, text: taskText, done: isDone });
    }
  });
  return tasks;
}

// set your obsidian vault location here
// ensure there's no leading or trailing quotes
// example: /Users/LEdelstein/Library/CloudStorage/OneDrive-PERFORCESOFTWARE,INC/Documents/Caravan
const vaultPath = "/Users/LEdelstein/Library/CloudStorage/OneDrive-PERFORCESOFTWARE,INC/Documents/Caravan";

function collectMdFilesRecursively(dirPath) {
  let mdFiles = [];
  try {
    const entries = fs.readdirSync(dirPath, { withFileTypes: true });
    for (const entry of entries) {
      const fullPath = path.join(dirPath, entry.name);
      if (entry.isFile() && entry.name.endsWith('.md')) {
        mdFiles.push(fullPath);
      } else if (entry.isDirectory()) {
        mdFiles = mdFiles.concat(collectMdFilesRecursively(fullPath));
      }
    }
  } catch (err) {
    console.error(`error reading directory: ${dirPath}`, err);
  }
  return mdFiles;
}

function fetchVaultTasks() {
  let collectedTasks = [];

  // recursively find all .md files
  const mdFiles = collectMdFilesRecursively(vaultPath);

  // parse each .md file for tasks
  for (const filePath of mdFiles) {
    try {
      const fileContent = fs.readFileSync(filePath, 'utf8');
      const fileTasks = parseTasksFromMarkdown(fileContent);
      collectedTasks = collectedTasks.concat(fileTasks);
    } catch (err) {
      console.error('error reading file:', filePath, err);
    }
  }

  return collectedTasks;
}

// read tasks and output to console
const tasks = fetchVaultTasks();
console.log(`found ${tasks.length} tasks:`);
console.log(tasks);
